name: publish
concurrency: publish
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build:
    name: Publish container image
    runs-on: ubuntu-latest
    permissions:
      id-token: none
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - shell: bash
        run: |
          mkdir -p ./build
      - id: manifest
        run: |
          wget -qO ./build/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod +x ./build/yq
          VERSION="$(./build/yq eval '.package.version' ./container-image/melange.yaml)"
          VERSION_1="$(echo "$VERSION" | cut -d. -f1)"
          VERSION_2="$VERSION_1.$(echo "$VERSION" | cut -d. -f2)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_1=$VERSION_1" >> $GITHUB_OUTPUT
          echo "version_2=$VERSION_2" >> $GITHUB_OUTPUT
          echo "version_full=$(./build/yq eval '.package.version + "-r" + (.package.epoch // 0)' ./container-image/melange.yaml)" >> $GITHUB_OUTPUT
      - uses: chainguard-dev/actions/melange-build@v1.4.3
        id: melange
        with:
          archs: x86_64
          config: ./container-image/melange.yaml
          sign-with-temporary-key: true
          signing-key-path: ./build/melange.rsa
          repository-path: ./build/packages
          source-dir: ${{ github.workspace }}
      - uses: chainguard-images/actions/apko-publish@v1.0.0
        id: apko
        with:
          archs: amd64
          config: ./container-image/apko.yaml
          tag: "ghcr.io/${{ github.repository_owner }}/metaleg-agent:${{ steps.manifest.outputs.version_full }} ghcr.io/${{ github.repository_owner }}/metaleg-agent:${{ steps.manifest.outputs.version }} ghcr.io/${{ github.repository_owner }}/metaleg-agent:${{ steps.manifest.outputs.version_1 }} ghcr.io/${{ github.repository_owner }}/metaleg-agent:${{ steps.manifest.outputs.version_2 }} ghcr.io/${{ github.repository_owner }}/metaleg-agent:latest"
          keyring-append: ./build/melange.rsa.pub
